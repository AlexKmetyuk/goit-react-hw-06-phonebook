{"version":3,"sources":["components/phonebook/PhonebookForm.jsx","components/phonebook/PhonebookList.jsx","components/phonebook/Filter.jsx","App.js","index.js"],"names":["PhonebookForm","state","id","uuidv4","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","check","onSubmit","reset","checkContact","className","this","type","pattern","title","required","onChange","Component","PhonebookList","contacts","onRemove","listItems","map","contact","onClick","Filter","App","filter","createContact","prevState","handleCheckUniqueContact","find","alert","handleRemoveContact","changeFilter","e","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","normalizedContactNames","toLocaleLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAkEeA,E,4MA9DbC,MAAQ,CACNC,GAAIC,cACJC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,cAAtBJ,EADgB,EAChBA,KAAMK,EADU,EACVA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAACJ,GACdA,EAAMK,iBACF,EAAKC,MAAMC,MAAM,EAAKb,MAAMG,OAIhC,EAAKS,MAAME,SAAS,EAAKd,OAHvB,EAAKe,S,EAOTA,MAAQ,WACN,EAAKN,SAAS,CAAER,GAAIC,cAAUC,KAAM,GAAIC,OAAQ,M,EAGlDY,aAAe,a,4CAEf,WACE,OACE,uBAAMC,UAAW,OAAQH,SAAUI,KAAKR,aAAxC,UACE,yCAEE,uBACES,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRd,MAAOU,KAAKlB,MAAMG,KAClBoB,SAAUL,KAAKb,kBAGnB,2CAEE,uBACEc,KAAK,MACLhB,KAAK,SACLiB,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRd,MAAOU,KAAKlB,MAAMI,OAClBmB,SAAUL,KAAKb,kBAGnB,wBAAQc,KAAK,SAAb,gC,GAzDoBK,aCHb,SAASC,EAAT,GAAgD,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC1CC,EAAYF,EAASG,KAAI,SAACC,GAAD,OAC7B,+BACE,8CACMA,EAAQ3B,KADd,KACsB2B,EAAQ1B,UAE9B,wBACE2B,QAAS,WACPJ,EAASG,EAAQ7B,KAFrB,sBAJO6B,EAAQ7B,OAcnB,OAAO,6BAAK2B,IChBd,IAOeI,EAPA,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOe,EAAV,EAAUA,SAAV,OACb,wBAAON,UAAW,OAAlB,kCAEE,uBAAOT,MAAOA,EAAOe,SAAUA,QC8EpBU,G,kNA1EbjC,MAAQ,CACN0B,SAAU,GACVQ,OAAQ,I,EAiBVC,cAAgB,SAACL,GACf,EAAKrB,UAAS,SAAC2B,GAAD,MAAgB,CAC5BV,SAAS,GAAD,mBAAMU,EAAUV,UAAhB,CAA0BI,S,EAItCO,yBAA2B,SAAClC,GAAU,IAE9BU,EADe,EAAKb,MAAlB0B,SACeY,MAAK,SAACR,GAC3B,OAAOA,EAAQ3B,OAASA,KAE1B,GAAIU,EAEF,OADA0B,MAAM,4BACC1B,G,EAIX2B,oBAAsB,SAACvC,GACrB,EAAKQ,UAAS,SAAC2B,GAAD,MAAgB,CAC5BV,SAAUU,EAAUV,SAASQ,QAAO,SAACJ,GAAD,OAAaA,EAAQ7B,KAAOA,U,EAIpEwC,aAAe,SAACC,GACd,EAAKjC,SAAS,CAAEyB,OAAQQ,EAAEnC,cAAcC,S,uDAtC1C,WACE,IAAMkB,EAAWiB,KAAKC,MAAMC,aAAaC,QAAQ,aAE7CpB,GACFR,KAAKT,SAAS,CAAEiB,SAAUA,M,gCAI9B,SAAmBqB,EAAWX,GACxBA,EAAUV,WAAaR,KAAKlB,MAAM0B,UACpCmB,aAAaG,QAAQ,WAAYL,KAAKM,UAAU/B,KAAKlB,MAAM0B,a,oBA+B/D,WAAU,IAAD,EACsBR,KAAKlB,MAA1B0B,EADD,EACCA,SAAUQ,EADX,EACWA,OAEZgB,EAAyBhB,EAAOiB,oBAEhCC,EAAkB1B,EAASQ,QAAO,SAACJ,GAAD,OACtCA,EAAQ3B,KAAKgD,oBAAoBE,SAASH,MAG5C,OACE,sBAAKjC,UAAW,MAAhB,UACE,2CACA,cAAC,EAAD,CACES,SAAUA,EACVb,MAAOK,KAAKmB,yBACZvB,SAAUI,KAAKiB,gBAEjB,0CACA,cAAC,EAAD,CAAQ3B,MAAO0B,EAAQX,SAAUL,KAAKuB,eACtC,cAAChB,EAAD,CACEC,SAAU0B,EACVzB,SAAUT,KAAKsB,6B,GApEPhB,cCFlB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5f93acc7.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass PhonebookForm extends Component {\n  state = {\n    id: uuidv4(),\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.props.check(this.state.name)) {\n      this.reset();\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ id: uuidv4(), name: \"\", number: \"\" });\n  };\n\n  checkContact = () => {};\n\n  render() {\n    return (\n      <form className={\"form\"} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default PhonebookForm;\n","export default function PhonebookList({ contacts, onRemove }) {\n  const listItems = contacts.map((contact) => (\n    <li key={contact.id}>\n      <p>\n        📱 {contact.name}: {contact.number}\n      </p>\n      <button\n        onClick={() => {\n          onRemove(contact.id);\n        }}\n      >\n        Remove\n      </button>\n    </li>\n  ));\n\n  return <ul>{listItems}</ul>;\n}\n","const Filter = ({ value, onChange }) => (\n  <label className={\"form\"}>\n    Find contacts by name\n    <input value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\n","import { Component } from \"react\";\nimport PhonebookForm from \"./components/phonebook/PhonebookForm\";\nimport PhonebookList from \"./components/phonebook/PhonebookList\";\nimport Filter from \"./components/phonebook/Filter\";\nimport \"./styles.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  createContact = (contact) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  handleCheckUniqueContact = (name) => {\n    const { contacts } = this.state;\n    const check = contacts.find((contact) => {\n      return contact.name === name;\n    });\n    if (check) {\n      alert(\"Contact is already exist\");\n      return check;\n    }\n  };\n\n  handleRemoveContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizedContactNames = filter.toLocaleLowerCase();\n\n    const visibleContacts = contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalizedContactNames)\n    );\n\n    return (\n      <div className={\"app\"}>\n        <h1>Phonebook</h1>\n        <PhonebookForm\n          contacts={contacts}\n          check={this.handleCheckUniqueContact}\n          onSubmit={this.createContact}\n        />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <PhonebookList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}